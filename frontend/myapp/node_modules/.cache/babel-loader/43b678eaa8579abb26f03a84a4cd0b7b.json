{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\e-commerce-react\\\\frontend\\\\myapp\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64'; //import { useDispatch, useSelector} from 'react-redux';\n\nimport useStyles from './styles.js'; //import { createPost, updatePost } from '../../actions/posts.js';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  /*const dispatch = useDispatch();\r\n  const post = useSelector((state) => currentId ? state.posts.find((p) => p._id == currentId) : null);\r\n    useEffect(() => {\r\n      if(post) setPostData(post);\r\n  }, [post])\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n        if (currentId) {\r\n          dispatch(updatePost(currentId, postData))\r\n      } else {\r\n          dispatch(createPost(postData));  \r\n      }\r\n      clear();\r\n    }*/\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: event => setPostData({ ...postData,\n          creator: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: event => setPostData({ ...postData,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: event => setPostData({ ...postData,\n          message: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: event => setPostData({ ...postData,\n          tags: event.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"QhFoIpqaIIYheuCkssygS7Npgiw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/hp/Downloads/e-commerce-react/frontend/myapp/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","clear","paper","root","form","handleSubmit","event","target","value","split","fileInput","base64","buttonSubmit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CACA;;AAEA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,EAAtB;AAA0BC,IAAAA,OAAO,EAAE,EAAnC;AAAuCC,IAAAA,IAAI,EAAE,EAA7C;AAAiDC,IAAAA,YAAY,EAAE;AAA/D,GAAD,CAAxC;AACA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMI,QAAMY,KAAK,GAAG,MAAM;AAChBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE,EAAtB;AAA0BC,MAAAA,OAAO,EAAE,EAAnC;AAAuCC,MAAAA,IAAI,EAAE,EAA7C;AAAiDC,MAAAA,YAAY,EAAE;AAA/D,KAAD,CAAX;AACH,GAHD;;AAKA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,OAAO,CAACE,KAA1B;AAAA,2BACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,SAAS,EAAG,GAAEF,OAAO,CAACG,IAAK,IAAGH,OAAO,CAACI,IAAK,EAA/E;AAAkF,MAAA,QAAQ,EAAEC,YAA5F;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,mBAA2Bd,SAAS,GAAG,SAAH,GAAe,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,KAAK,EAAEE,QAAQ,CAACE,OALpB;AAMI,QAAA,QAAQ,EAAGW,KAAD,IAAWZ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,UAAAA,OAAO,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAArC,SAAD;AANpC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,KAAK,EAAEf,QAAQ,CAACG,KALpB;AAMI,QAAA,QAAQ,EAAGU,KAAD,IAAWZ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,UAAAA,KAAK,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAAnC,SAAD;AANpC;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,KAAK,EAAEf,QAAQ,CAACI,OALpB;AAMI,QAAA,QAAQ,EAAGS,KAAD,IAAWZ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,OAAO,EAAES,KAAK,CAACC,MAAN,CAAaC;AAArC,SAAD;AANpC;AAAA;AAAA;AAAA;AAAA,cApBJ,eA6BI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,MAHV;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,KAAK,EAAEf,QAAQ,CAACK,IALpB;AAMI,QAAA,QAAQ,EAAGQ,KAAD,IAAWZ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,UAAAA,IAAI,EAAEQ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB;AAArB,SAAD;AANpC;AAAA;AAAA;AAAA;AAAA,cA7BJ,eAsCI;AAAK,QAAA,SAAS,EAAET,OAAO,CAACU,SAAxB;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,QAAQ,EAAI,KAFhB;AAGI,UAAA,MAAM,EAAE,CAAC;AAACC,YAAAA;AAAD,WAAD,KAAcjB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,YAAAA,YAAY,EAAEY;AAA7B,WAAD;AAHrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtCJ,eA6CI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEX,OAAO,CAACY,YAA3B;AAAyC,QAAA,OAAO,EAAC,WAAjD;AAA6D,QAAA,KAAK,EAAC,SAAnE;AAA6E,QAAA,IAAI,EAAC,OAAlF;AAA0F,QAAA,IAAI,EAAC,QAA/F;AAAwG,QAAA,SAAS,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CJ,eA8CI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,IAAI,EAAC,OAAnD;AAA2D,QAAA,OAAO,EAAEX,KAApE;AAA2E,QAAA,SAAS,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CA/ED;;GAAMX,I;UAEcD,S;;;KAFdC,I;AAiFN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\n//import { useDispatch, useSelector} from 'react-redux';\r\n\r\nimport useStyles from './styles.js';\r\n\r\n//import { createPost, updatePost } from '../../actions/posts.js';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    const classes = useStyles();\r\n    /*const dispatch = useDispatch();\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id == currentId) : null);\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData))\r\n        } else {\r\n            dispatch(createPost(postData));  \r\n        }\r\n        clear();\r\n\r\n    }*/\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{ currentId ? 'Editing' : 'Creating' } a Memory</Typography>\r\n                <TextField \r\n                    name=\"creator\" \r\n                    variant=\"outlined\"\r\n                    label=\"Creator\"\r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={(event) => setPostData({ ...postData, creator: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(event) => setPostData({ ...postData, title: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"message\" \r\n                    variant=\"outlined\"\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(event) => setPostData({ ...postData, message: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"tags\" \r\n                    variant=\"outlined\"\r\n                    label=\"Tags\"\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(event) => setPostData({ ...postData, tags: event.target.value.split(',') })}\r\n                />\r\n\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple = {false}\r\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile: base64})}\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}