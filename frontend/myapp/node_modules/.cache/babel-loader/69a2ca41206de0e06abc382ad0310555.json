{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\e-commerce-react\\\\frontend\\\\myapp\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles.js';\nimport axios from 'axios';\n\nconst Form = ({\n  currentId,\n  setCurrentId,\n  userid\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    title: '',\n    description: '',\n    price: '',\n    brand: '',\n    tags: '',\n    category: '',\n    picture: '',\n    highlights: '',\n    userid: userid\n  });\n  const classes = useStyles();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/product/createproduct\",\n      data: {\n        title,\n        description,\n        price,\n        brand,\n        tags,\n        category,\n        picture,\n        highlights,\n        userid\n      }\n    }).then(res => {\n      if (res.data.error == \"\") {\n        console.log(\"Product creation done Successfully!\", res.data._id);\n      } else {\n        console.log(res.data.error);\n      }\n    });\n    /*if (currentId) {\r\n        dispatch(updatePost(currentId, postData))\r\n    } else {\r\n        dispatch(createPost(postData));  \r\n    }*/\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      description: '',\n      price: '',\n      brand: '',\n      tags: '',\n      category: '',\n      picture: '',\n      highlights: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing a ' : 'Uploading a new ', \"Product\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: event => setPostData({ ...postData,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"description\",\n        variant: \"outlined\",\n        label: \"Description\",\n        fullWidth: true,\n        value: postData.description,\n        onChange: event => setPostData({ ...postData,\n          description: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"price\",\n        variant: \"outlined\",\n        label: \"Price\",\n        fullWidth: true,\n        value: postData.price,\n        onChange: event => setPostData({ ...postData,\n          price: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"brand\",\n        variant: \"outlined\",\n        label: \"Brand\",\n        fullWidth: true,\n        value: postData.brand,\n        onChange: event => setPostData({ ...postData,\n          brand: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: event => setPostData({ ...postData,\n          tags: event.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"category\",\n        variant: \"outlined\",\n        label: \"Category\",\n        fullWidth: true,\n        value: postData.category,\n        onChange: event => setPostData({ ...postData,\n          category: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"highlights\",\n        variant: \"outlined\",\n        label: \"Product Highlights\",\n        fullWidth: true,\n        value: postData.highlights,\n        onChange: event => setPostData({ ...postData,\n          highlights: event.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            picture: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"AXwrbVznoPb2qnyyatybOwTnzbU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/hp/Downloads/e-commerce-react/frontend/myapp/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","axios","Form","currentId","setCurrentId","userid","postData","setPostData","title","description","price","brand","tags","category","picture","highlights","classes","handleSubmit","event","preventDefault","method","url","data","then","res","error","console","log","_id","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles.js';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId, userid }) => {\r\n    const [postData, setPostData] = useState({title: '', description: '', price: '', brand: '', tags: '', category: '', picture: '', highlights: '', userid: userid});\r\n    const classes = useStyles();\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:5000/product/createproduct\",\r\n            data: {title, description, price, brand, tags, category, picture, highlights, userid},\r\n            \r\n          }).then(res => {\r\n              if(res.data.error == \"\"){\r\n                console.log(\"Product creation done Successfully!\", res.data._id);\r\n              }else{\r\n                console.log(res.data.error);\r\n              }\r\n          });\r\n        /*if (currentId) {\r\n            dispatch(updatePost(currentId, postData))\r\n        } else {\r\n            dispatch(createPost(postData));  \r\n        }*/\r\n        clear();\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({title: '', description: '', price: '', brand: '', tags: '', category: '', picture: '', highlights: ''});\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}>\r\n                <Typography variant=\"h6\">{ currentId ? 'Editing a ' : 'Uploading a new ' }Product</Typography>\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(event) => setPostData({ ...postData, title: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"description\" \r\n                    variant=\"outlined\"\r\n                    label=\"Description\"\r\n                    fullWidth\r\n                    value={postData.description}\r\n                    onChange={(event) => setPostData({ ...postData, description: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"price\" \r\n                    variant=\"outlined\"\r\n                    label=\"Price\"\r\n                    fullWidth\r\n                    value={postData.price}\r\n                    onChange={(event) => setPostData({ ...postData, price: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"brand\" \r\n                    variant=\"outlined\"\r\n                    label=\"Brand\"\r\n                    fullWidth\r\n                    value={postData.brand}\r\n                    onChange={(event) => setPostData({ ...postData, brand: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"tags\" \r\n                    variant=\"outlined\"\r\n                    label=\"Tags\"\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(event) => setPostData({ ...postData, tags: event.target.value.split(',') })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"category\" \r\n                    variant=\"outlined\"\r\n                    label=\"Category\"\r\n                    fullWidth\r\n                    value={postData.category}\r\n                    onChange={(event) => setPostData({ ...postData, category: event.target.value })}\r\n                />\r\n\r\n                <TextField \r\n                    name=\"highlights\" \r\n                    variant=\"outlined\"\r\n                    label=\"Product Highlights\"\r\n                    fullWidth\r\n                    value={postData.highlights}\r\n                    onChange={(event) => setPostData({ ...postData, highlights: event.target.value.split(',') })}\r\n                />\r\n\r\n\r\n\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple = {false}\r\n                        onDone={({base64}) => setPostData({ ...postData, picture: base64})}\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth onClick={handleSubmit}>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}