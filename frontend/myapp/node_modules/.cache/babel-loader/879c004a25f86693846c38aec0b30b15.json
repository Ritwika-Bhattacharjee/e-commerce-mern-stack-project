{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\e-commerce-react\\\\frontend\\\\myapp\\\\src\\\\components\\\\EachSellerOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { CircularProgress } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport axios from 'axios';\n\nconst EachSellerOrder = ({\n  order\n}) => {\n  _s();\n\n  const [product, setProduct] = useState(null);\n  const [edit, setEdit] = useState(false);\n\n  const getProductDetails = () => {\n    console.log(\"Calling get product details\");\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:5000/product/getoneproduct/\" + order.item\n    }).then(res => {\n      if (!res.data.error) {\n        setProduct(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getProductDetails();\n  }, []);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1)\n      }\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    },\n    content: {\n      flex: '1 0 auto'\n    },\n    cover: {\n      width: '45%',\n      height: '420px',\n      cursor: 'pointer'\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1)\n    },\n    container: {\n      width: '100%',\n      margin: 'auto'\n    },\n    price: {\n      color: 'white',\n      fontWeight: 'bold',\n      backgroundColor: 'maroon',\n      padding: '10px',\n      width: '90px',\n      borderRadius: '15%'\n    },\n    form: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.cover,\n          src: product.picture,\n          title: \"Product Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.details,\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h5\",\n              variant: \"h5\",\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              className: classes.price,\n              children: [\"Rs. \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.controls,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                marginLeft: '15px',\n                marginRight: '50px'\n              },\n              children: [\"Qty: \", order.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [\"Total Price: \", order.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), !edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                style: {\n                  marginLeft: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" Payment: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 49\n                }, this), order.payment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                style: {\n                  marginLeft: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 49\n                }, this), order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                style: {\n                  marginLeft: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Expected Delivery : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 53\n                }, this), order.expectedDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  backgroundColor: '#FFC300'\n                },\n                onClick: e => setEdit(true),\n                children: [\" \", /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 120\n                }, this), \" Edit \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              autoComplete: \"off\",\n              noValidate: true,\n              className: `${classes.root} ${classes.form}`,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [currentId ? 'Editing a ' : 'Uploading a new ', \"Product\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"title\",\n                variant: \"outlined\",\n                label: \"Title\",\n                fullWidth: true,\n                value: postData.title,\n                onChange: event => setPostData({ ...postData,\n                  title: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"description\",\n                variant: \"outlined\",\n                label: \"Description\",\n                fullWidth: true,\n                value: postData.description,\n                onChange: event => setPostData({ ...postData,\n                  description: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"price\",\n                variant: \"outlined\",\n                label: \"Price\",\n                fullWidth: true,\n                value: postData.price,\n                onChange: event => setPostData({ ...postData,\n                  price: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\"Order Id: \", order._id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\"Ordered On: \", order.orderedOn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\"Contact No.: \", order.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\"Address: \", order.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EachSellerOrder, \"GP9KEJrr/pzCguCp9Z2feLJZrfg=\", true);\n\n_c = EachSellerOrder;\nexport default EachSellerOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachSellerOrder\");","map":{"version":3,"sources":["C:/Users/hp/Downloads/e-commerce-react/frontend/myapp/src/components/EachSellerOrder.js"],"names":["React","useState","useEffect","makeStyles","Card","CardContent","CardMedia","IconButton","Typography","Collapse","clsx","ExpandMoreIcon","CircularProgress","TextField","Button","EditIcon","axios","EachSellerOrder","order","product","setProduct","edit","setEdit","getProductDetails","console","log","method","url","item","then","res","data","error","useStyles","theme","root","display","margin","spacing","details","flexDirection","width","content","flex","cover","height","cursor","controls","alignItems","paddingLeft","paddingBottom","container","price","color","fontWeight","backgroundColor","padding","borderRadius","form","flexWrap","justifyContent","classes","picture","title","description","marginLeft","marginRight","quantity","amount","payment","status","expectedDate","e","currentId","postData","event","setPostData","target","value","_id","orderedOn","contact","address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\n\r\n\r\nconst EachSellerOrder = ({ order }) => {\r\n    const [product, setProduct] = useState(null);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const getProductDetails = () => {\r\n        console.log(\"Calling get product details\");\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"http://localhost:5000/product/getoneproduct/\"+order.item, \r\n          }).then(res => {\r\n              if(!res.data.error){\r\n                setProduct(res.data);\r\n              }\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductDetails();\r\n    }, []);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n          },      \r\n        },\r\n        details: {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          width: '100%',\r\n        },\r\n        content: {\r\n          flex: '1 0 auto',\r\n        },\r\n        cover: {\r\n          width: '45%',\r\n          height: '420px',\r\n          cursor: 'pointer',\r\n        },\r\n        controls: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          paddingLeft: theme.spacing(1),\r\n          paddingBottom: theme.spacing(1),\r\n        },\r\n        container: {\r\n            width: '100%',\r\n            margin: 'auto',\r\n        },\r\n        price: {\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'maroon',\r\n            padding: '10px',\r\n            width: '90px',\r\n            borderRadius: '15%',\r\n        },\r\n        form: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n\r\n    return (        \r\n        <div>\r\n\r\n            {\r\n                product ? (\r\n                    <div className={classes.container}>\r\n                        <Card className={classes.root}>\r\n                            <img\r\n                                className={classes.cover}\r\n                                src={product.picture}\r\n                                title=\"Product Details\"\r\n                            />\r\n                            <div className={classes.details}>\r\n                                <CardContent className={classes.content}>\r\n                                <Typography component=\"h5\" variant=\"h5\">\r\n                                    {product.title}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                                    {product.description}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.price}>\r\n                                    Rs. {product.price}\r\n                                </Typography>\r\n                                </CardContent>\r\n                                <div className={classes.controls}>\r\n                                \r\n                                <Typography variant=\"subtitle1\" style={{marginLeft: '15px', marginRight: '50px'}}>\r\n                                    Qty: {order.quantity}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Total Price: {order.amount}\r\n                                </Typography> \r\n\r\n                                </div>\r\n\r\n                                {\r\n                                    !edit ? (\r\n                                        <div style={{display: 'flex', flexDirection:'row'}}>\r\n                                        <div>   \r\n                                            <Typography variant=\"subtitle1\" style={{marginLeft: '20px'}}>\r\n                                                <b> Payment: </b>{order.payment} \r\n                                            </Typography> \r\n                                            <Typography variant=\"subtitle1\" style={{marginLeft: '20px'}}>\r\n                                                <b> Status: </b>{order.status} \r\n                                            </Typography>\r\n                                            <Typography variant=\"subtitle1\" style={{marginLeft: '20px'}}>\r\n                                                    <b>Expected Delivery : </b>{order.expectedDate}\r\n                                            </Typography>\r\n                                        </div> \r\n                                        <div>\r\n                                            <Button style={{backgroundColor: '#FFC300'}} onClick={e => setEdit(true)}> <EditIcon /> Edit </Button>\r\n                                        </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}>\r\n                                                <Typography variant=\"h6\">{ currentId ? 'Editing a ' : 'Uploading a new ' }Product</Typography>\r\n                                                <TextField \r\n                                                    name=\"title\" \r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Title\"\r\n                                                    fullWidth\r\n                                                    value={postData.title}\r\n                                                    onChange={(event) => setPostData({ ...postData, title: event.target.value })}\r\n                                                />\r\n\r\n                                                <TextField \r\n                                                    name=\"description\" \r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Description\"\r\n                                                    fullWidth\r\n                                                    value={postData.description}\r\n                                                    onChange={(event) => setPostData({ ...postData, description: event.target.value })}\r\n                                                />\r\n\r\n                                                <TextField \r\n                                                    name=\"price\" \r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Price\"\r\n                                                    fullWidth\r\n                                                    value={postData.price}\r\n                                                    onChange={(event) => setPostData({ ...postData, price: event.target.value })}\r\n                                                />\r\n                                            </form>\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n                                    <CardContent>\r\n                                    <Typography variant=\"subtitle2\">Order Id: {order._id}</Typography>\r\n                                    <Typography variant=\"subtitle2\">Ordered On: {order.orderedOn}</Typography>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        Contact No.: {order.contact}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        Address: {order.address}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                \r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <CircularProgress />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachSellerOrder;"]},"metadata":{},"sourceType":"module"}